%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Name: Om Patel
% MACID: patelo7
% Student #: 400378073

%%%



X = 2; %approximation to this value of x
h = 0.1; %step-size
N = X/h; %steps required

x = zeros(1,round(N)+1); 
x(1) = 0;

y_euler = zeros(1,round(N)+1);%setup for Euler method
y_euler(1) = 0;

y_runge_kutta = zeros(1,round(N)+1);%setup for Runge-Kutta method
y_runge_kutta(1) = 0;

for n = 1:round(N) %Euler method loop
    x(n+1) = x(n) + h;
    y_euler(n+1) = y_euler(n) + h*(7*x(n)+y_euler(n));
end

% y' = 7x + y
for n = 1:round(N) %Runge-Kutta method loop
    k1 = 7*x(n) + y_runge_kutta(n);
    k2 = 7*(x(n)+h/2) + (y_runge_kutta(n)+h*(k1/2));
    k3 = 7*(x(n)+h/2) + (y_runge_kutta(n)+h*(k2/2));
    k4 = 7*(x(n)+h) + (y_runge_kutta(n)+h*k3);

    y_runge_kutta(n+1) = y_runge_kutta(n) + (h/6)*(k1+2*k2+2*k3+k4);
    x(n+1) = x(n) + h;
end

%%% plotting the functions
yExact = 7.*exp(x)-7.*x-7; %exact function
plot(x,yExact,'r',x,y_euler,'k',x,y_runge_kutta,'b'); % plotting
title('Euler method and Runge-Kutta method compared to exact solution'); % figure's title,
legend('exact solution','Euler Method','Runge-Kutta Method'); % legend
xlabel('x'); ylabel('y'); % and axis labels

%%% error calculations
for n = 1:round(N)
    abs(y_euler(n) - yExact(n))/yExact(n)*100
end